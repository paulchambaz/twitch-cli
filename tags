!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/paul/dev/c/twitch-cli/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
${OBJ}	build/Makefile	/^${OBJ}: ..\/include\/config.h config.mk$/;"	t
../include/config.h	build/Makefile	/^..\/include\/config.h:$/;"	t
.c.o	build/Makefile	/^.c.o:$/;"	t
AUTHORS	twitch-cli.1	/^.SH AUTHORS$/;"	s	title:twitch-cli
About	README.md	/^About$/;"	s	chapter:TWITCH-CLI
BOLD	source/main.c	/^#define BOLD /;"	d	file:
CC	build/config.mk	/^CC = clang$/;"	m
DEBUG_CFLAGS	build/config.mk	/^DEBUG_CFLAGS = ${CFLAGS} -UNDEBUG -O0 -g -ggdb -Wall -Wextra -Wno-unused-parameter$/;"	m
Dependencies	README.md	/^Dependencies$/;"	s	chapter:TWITCH-CLI
FetchStreamerData	source/main.c	/^void FetchStreamerData (int count, char *streamer[], char *status) {$/;"	f	typeref:typename:void
GREEN	source/main.c	/^#define GREEN /;"	d	file:
GREY	source/main.c	/^#define GREY /;"	d	file:
HOW	twitch-cli.1	/^.SH HOW TO USE$/;"	s	title:twitch-cli
How To Use	README.md	/^How To Use$/;"	s	chapter:TWITCH-CLI
INCS	build/config.mk	/^INCS = -I ..\/include$/;"	m
Installation	README.md	/^Installation$/;"	s	chapter:TWITCH-CLI
KW_EXIST	source/main.c	/^#define KW_EXIST /;"	d	file:
KW_LIVE	source/main.c	/^#define KW_LIVE /;"	d	file:
LIBS	build/config.mk	/^LIBS = -lcurl$/;"	m
LICENSE	twitch-cli.1	/^.SH LICENSE$/;"	s	title:twitch-cli
Licence	README.md	/^Licence$/;"	s	chapter:TWITCH-CLI
MANPREFIX	build/config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX_ANSWER	source/main.c	/^#define MAX_ANSWER /;"	d	file:
MORE	twitch-cli.1	/^.SH MORE INFORMATION$/;"	s	title:twitch-cli
MemoryStruct	source/main.c	/^struct MemoryStruct {$/;"	s	file:
NAME	twitch-cli.1	/^.SH NAME $/;"	s	title:twitch-cli
OBJ	build/Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
PREFIX	build/config.mk	/^PREFIX ?= \/usr\/local$/;"	m
RED	source/main.c	/^#define RED /;"	d	file:
RESET	source/main.c	/^#define RESET /;"	d	file:
SEE	twitch-cli.1	/^.SH SEE ALSO$/;"	s	title:twitch-cli
SRC	build/Makefile	/^SRC = ..\/source\/main.c$/;"	m
STRIP	build/config.mk	/^STRIP ?= strip$/;"	m
SYNOPSIS	twitch-cli.1	/^.SH SYNOPSIS$/;"	s	title:twitch-cli
TERMINFO	build/config.mk	/^TERMINFO := ${DESTDIR}${PREFIX}\/share\/terminfo$/;"	m
TWITCH-CLI	README.md	/^TWITCH-CLI$/;"	c
UNDER	source/main.c	/^#define UNDER /;"	d	file:
VERSION	build/config.mk	/^VERSION = 0.1$/;"	m
WriteMemoryCallback	source/main.c	/^static size_t WriteMemoryCallback (void *content, size_t size, size_t nmemb, void *userp) {$/;"	f	typeref:typename:size_t	file:
_GNU_SOURCE	source/main.c	/^#define _GNU_SOURCE$/;"	d	file:
all	build/Makefile	/^all: clean options twitch-cli$/;"	t
clean	build/Makefile	/^clean:$/;"	t
debug	build/Makefile	/^debug: clean$/;"	t
dist	build/Makefile	/^dist: clean$/;"	t
install	build/Makefile	/^install: twitch-cli$/;"	t
main	source/main.c	/^int main (int argc, char *argv[]) {$/;"	f	typeref:typename:int
memory	source/main.c	/^  char *memory;$/;"	m	struct:MemoryStruct	typeref:typename:char *	file:
options	build/Makefile	/^options:$/;"	t
size	source/main.c	/^  size_t size;$/;"	m	struct:MemoryStruct	typeref:typename:size_t	file:
streamers	include/config.def.h	/^char *streamers[] = {$/;"	v	typeref:typename:char * []
streamers	include/config.h	/^char *streamers[] = {$/;"	v	typeref:typename:char * []
twitch-cli	build/Makefile	/^twitch-cli: ${OBJ}$/;"	t
twitch-cli	twitch-cli.1	/^.TH twitch-cli 1 twitch-cli$/;"	t
uninstall	build/Makefile	/^uninstall:$/;"	t
